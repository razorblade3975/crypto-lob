# AddressSanitizer Suppressions

## alloc-dealloc-mismatch with libc++ exceptions

This is a known issue when using Clang with libc++ and AddressSanitizer.
The C++ runtime allocates exception objects with `operator new` but they
get deallocated with `free()`, causing ASAN to report a false positive.

This is tracked as LLVM issue #59432:
https://github.com/llvm/llvm-project/issues/59432

### Workaround

Set the following environment variable when running tests:
```bash
export ASAN_OPTIONS=alloc_dealloc_mismatch=0
```

This is automatically handled by:
- The CI workflow (.github/workflows/ci.yml)
- The build script (scripts/build.sh)

### Impact

This only disables the alloc-dealloc-mismatch check. All other ASAN
checks remain active, including:
- Buffer overflows
- Use-after-free
- Memory leaks
- Stack buffer overflows
- Global buffer overflows

### Alternative Solutions Considered

1. Using libstdc++ instead of libc++ - Not viable as the project uses
   Clang/libc++ for optimal HFT performance
2. Static linking libc++ - Doesn't fully resolve the issue
3. Suppression files - ASAN doesn't support suppressing this specific error
4. Disabling exceptions - Would require significant code changes

The current workaround is the pragmatic solution until the upstream bug is fixed.