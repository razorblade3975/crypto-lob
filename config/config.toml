# High-Performance Crypto Market Data Provider Configuration
# This file configures exchanges, symbols, threading, and performance parameters

[system]
log_level = "info"  # debug, info, warn, error
log_file = "/workspace/output/crypto_lob.log"

[threading]
# CPU core assignments (set to -1 for no pinning)
control_thread_core = 0
orderbook_thread_core = 1

# Memory pool configuration
[memory]
raw_message_pool_size = 8192     # Pre-allocated raw messages
normalized_pool_size = 8192       # Pre-allocated normalized messages
queue_size = 4096                 # SPSC queue size (should be power of 2)

# Exchanges configuration
[exchanges.binance_spot]
# Thread affinity
connector_core = 2
parser_core = 3

# WebSocket connection settings
websocket_url = "wss://stream.binance.com:9443/ws"
use_ssl = true

# Connection timeouts (milliseconds)
connect_timeout_ms = 5000
handshake_timeout_ms = 5000
read_timeout_ms = 30000

# Ping/Pong settings
ping_interval_ms = 20000     # Binance sends ping every 20s
pong_timeout_ms = 60000      # Must respond within 60s

# Reconnection strategy
reconnect_delay_ms = 1000
max_reconnect_attempts = 0   # 0 = infinite retries
max_reconnect_delay_ms = 60000

# Stream subscriptions
# Format: <symbol>@<channel>[@<updateSpeed>ms]
subscriptions = [
    "btcusdt@depth20@100ms",
    "ethusdt@depth20@100ms",
    "bnbusdt@depth20@100ms",
]

[exchanges.coinbase]
connector_core = 4
parser_core = 5
websocket_url = "wss://ws-feed.exchange.coinbase.com"
use_ssl = true
connect_timeout_ms = 5000
handshake_timeout_ms = 5000
read_timeout_ms = 30000
ping_interval_ms = 30000
pong_timeout_ms = 60000
reconnect_delay_ms = 1000
max_reconnect_attempts = 0
max_reconnect_delay_ms = 60000
subscriptions = [
    "BTC-USD",
    "ETH-USD",
]

# Development/Testing settings
[debug]
verbose_logging = false
save_raw_messages = false
raw_message_dir = "/workspace/output/raw_messages/"
enable_profiling = false
profile_output = "/workspace/output/profile.json"
simulate_disconnects = false
disconnect_interval_sec = 300
max_messages_per_second = 0  # 0 = unlimited