name: Docker CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  docker-test:
    name: Docker Build and Test
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Build development container
      run: |
        docker compose build crypto-lob-dev
    
    - name: Run tests in container
      run: |
        docker compose run --rm crypto-lob-dev bash -c "
          cd /workspace && \
          conan install . --output-folder=build --build=missing \
            -s compiler=clang -s compiler.version=17 \
            -s compiler.libcxx=libc++ -s compiler.cppstd=20 && \
          cd build && \
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake \
                -DBUILD_TESTS=ON \
                -G Ninja .. && \
          ninja -j\$(nproc) && \
          ctest -V --output-on-failure
        "
    
    - name: Run static analysis in container
      run: |
        docker compose run --rm crypto-lob-dev bash -c "
          cd /workspace && \
          find src tests -name '*.cpp' -o -name '*.hpp' | xargs clang-format-17 --dry-run --Werror && \
          echo 'Code formatting check passed'
        "
    
    - name: Build production container
      run: |
        docker compose build crypto-lob-prod
    
    - name: Test production container startup
      run: |
        docker compose run --rm crypto-lob-prod /crypto-lob --version || echo "No version flag implemented yet"
    
    - name: Upload container logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: docker-logs
        path: |
          *.log
          docker-compose.yml

  docker-security-scan:
    name: Container Security Scan
    runs-on: ubuntu-22.04
    needs: docker-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build image for scanning
      run: |
        docker build -t crypto-lob:scan .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: crypto-lob:scan
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'